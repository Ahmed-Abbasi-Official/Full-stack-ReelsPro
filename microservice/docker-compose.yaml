version: "3.8"
services:
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server1
      - server2
      - server3
    networks:
      - app_network

  server1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server1
    networks:
      - app_network
    ports:
      - "8001:8000"
    depends_on:
      - redis
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb+srv://aymicoding:DQmDt7MFFqBGJoy0@cluster0.2oluew4.mongodb.net/reelsPro
      - SERVER_ID=server-1
      - REDIS_HOST=redis
      - PORT=6379
      - PASSWORD=DuqkNLY9Jg4ZmWR9aLDZrKlpusoOn33u

  server2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server2
    networks:
      - app_network
    ports:
      - "8002:8000"
    depends_on:
      - redis
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb+srv://aymicoding:DQmDt7MFFqBGJoy0@cluster0.2oluew4.mongodb.net/reelsPro
      - SERVER_ID=server-2
      - REDIS_HOST=redis
      - PORT=6379
      - PASSWORD=DuqkNLY9Jg4ZmWR9aLDZrKlpusoOn33u

  server3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server3
    networks:
      - app_network
    ports:
      - "8003:8000"
    depends_on:
      - redis
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb+srv://aymicoding:DQmDt7MFFqBGJoy0@cluster0.2oluew4.mongodb.net/reelsPro
      - SERVER_ID=server-3
      - REDIS_HOST=redis
      - PORT=6379
      - PASSWORD=DuqkNLY9Jg4ZmWR9aLDZrKlpusoOn33u

  redis:
    image: redis
    container_name: redis
    networks:
      - app_network
    ports:
      - "6379:6379"
    restart: always
    command: redis-server --requirepass DuqkNLY9Jg4ZmWR9aLDZrKlpusoOn33u

networks:
  app_network:
    driver: bridge
